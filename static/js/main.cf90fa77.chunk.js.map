{"version":3,"sources":["../../wlcommon/build/exports.js","../../wlcommon/build/util.js","components/Header.tsx","socket/socket.ts","components/Login.tsx","components/Popups/Tooltip.tsx","components/TopBar/InventoryItem.tsx","components/TopBar/Timer.tsx","components/TopBar/TopBar.tsx","components/Location/Action.tsx","components/Location/TravelPopup.tsx","PlayerAction.tsx","components/Location/Shallows.tsx","components/Location/Shores.tsx","components/Location/Corals.tsx","components/Location/Store.tsx","components/Location/Woods.tsx","components/Location/Statue.tsx","components/Location/Library.tsx","components/Location/Anchovy.tsx","components/Location/Barnacle.tsx","components/Location/Salmon.tsx","components/Location/Kelp.tsx","components/Location/Umbral.tsx","components/Location/Tuna.tsx","components/Location/Catfish.tsx","components/Location/Bubble.tsx","components/Location/Shrine.tsx","components/Location/Alcove.tsx","components/Location/LocationComponent.tsx","components/BottomBar/Notification.tsx","components/BottomBar/Notifications.tsx","components/BottomBar/QuestInfo.tsx","components/BottomBar/QuestLog.tsx","components/BottomBar/BottomBar.tsx","components/Journal/Journal.tsx","components/Popups/OnActionPopup.tsx","components/Game.tsx","pages/Main.tsx","components/MentorGame.tsx","pages/Mentor.tsx","pages/Admin.tsx","App.tsx","reportWebVitals.ts","index.tsx","../../wlcommon/build/locations.js","../../wlcommon/build/state.js","../../wlcommon/build/items.js","../../wlcommon/build/quests.js","../../wlcommon/build/actions.js"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__exportStar","exports","p","prototype","hasOwnProperty","call","__importStar","mod","__esModule","result","Util","Actions","Locations","require","padNumber","x","numOfDigits","toString","padStart","formatDuration","millisecs","secs","Math","floor","mins","hrs","padTo2Digit","formatTime","ms","seconds","minutes","hours","Header","props","chapter","deadline","React","useState","timeLeft","setTimeLeft","useEffect","timer","setInterval","valueOf","Date","now","clearInterval","className","socket","io","process","autoConnect","SocketContext","createContext","Login","updateLoggedIn","mode","groupName","setGroupName","password","setPassword","hasErrorMessage","setHasErrorMessage","errorMessage","setErrorMessage","useContext","authenticateReply","eventType","payload","console","log","updatePlayerState","updateGlobalState","updateTeamId","playerState","globalState","connected","connect","onChange","event","target","groupId","parseInt","Number","isNaN","e","onClick","emit","id","pass","tooltipTypes","Tooltip","isVisible","tooltipType","data","isRightSide","title","details","Fragment","itemData","itemsById","name","description","reqLine","locationData","locationsMapping","style","display","side","INVENTORY_ITEMS_ASSET_MAP","Map","itemDetails","MAP","OXYGEN_GUIDE","MERMAID_DOLL","PUMP","BLACK_ROCK","BUBBLE","getImg","item","imgFileName","InventoryItem","triggerTooltip","triggerTooltipWithData","onMouseEnter","onMouseLeave","src","TIMER_IMG_ASSET_MAP","Timer","until","TopBar","inventory","oxygenUntil","quantifiedInventory","values","forEach","record","i","qty","push","map","Action","action","y","isEnabled","handleAction","tooltipInfo","position","top","left","isTooltipRightSide","length","TravelPopup","setVisible","handleTravel","visibility","locationIds","locationId","location","ALCOVE","unlockedAlcove","SHRINE","unlockedShrine","WOODS","unlockedWoods","needsMap","STORE","hasMap","SHORES","canTravel","PlayerAction","task","enabled","getVisibility","getEnabled","actions","ALL_UNDERWATER","STORE_OXYGEN","WITHDRAW_OXYGEN","RESURFACE","Shallows","storedOxygen","actionProps","key","playerAction","currActionProps","imgDirectoryGenerator","info","specificActions","DIVE","Shores","CORALS","EXPLORE","LEARN_LANG","quests","questIds","FINCHES","status","ALL_OXYGEN","GET_OXYGEN","Corals","entries","actionId","index","BUY_MAP","BUY_GUIDE","BUY_DOLL","BUY_DISCOVERS","BUY_PUMP","BUY_BLACK_ROCK","BUY_BUBBLE_PASS","Store","pausedOxygen","GET_HAIR","Woods","STATUE","DECODE_ENGRAVING","CAST_COOLING_AURA","STRENGTHEN_BEFUDDLEMENT","POWER_CONTAINMENT","PURIFY_CORRUPTION","Statue","knowsLanguage","knowsCrimson","LIBRARY","STUDY_CRIMSON","STUDY_ARTEFACT","DECODE_ARTEFACT","Library","ANCHOVY","INSPIRE","Anchovy","BARNACLE","HELP","Barnacle","SALMON","CONFRONT","Salmon","KELP","CLIMB_DOWN","HARVEST","Kelp","UMBRAL","GIVE_PAN","GIVE_ROCK","Umbral","Tuna","Catfish","Bubble","hasBubblePass","GIVE_HAIR","COLLECT_HAIR","Shrine","RETRIEVE_PEARL","Alcove","getSpecificLocationComponent","specificLocationComponentProps","component","SHALLOWS","TUNA","CATFISH","LocationComponent","isMentor","isTravelVisible","isTravelPopupVisible","setIsTravelPopupVisible","travelActionProps","determineIfRecent","d","d1","d2","Notification","time","message","isRecent","setIsRecent","Notifications","notifications","notifToDisplayString","toTimeString","slice","sort","n1","n2","QuestInfo","questState","questInfo","questName","questSteps","stageOrder","currProgress","stages","indexOf","QuestLog","questStates","filter","qs","q1","q2","BottomBar","Journal","OnActionPopup","popupText","priority","mentorProps","handleActionApprove","handleActionReject","Game","teamId","gameMentorProps","isTooltipVisible","setIsTooltipVisible","setTooltipType","tooltipData","setTooltipData","setIsTooltipRightSide","type","playerNotifs","messages","onActionPopupProps","stagedAction","onActionPopupMentorProps","crimsonUntil","Main","loggedIn","setPlayerState","setGlobalState","setTeamId","on","newGameState","MentorGame","height","border","Mentor","adminCommandReducer","state","Admin","input","setInput","useReducer","output","outputDispatch","entry","toLocaleTimeString","placeholder","onKeyDown","split","JSON","stringify","App","setLoggedIn","disconnect","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","LocationBuilder","_description","_hasOxygenStream","_hidden","_undersea","_needsMap","need","oxygenStream","hidden","undersea","locations","surface","make","DISCOVERS","STAFF","BLINKSEED","PYRITE_PAN","LIBRARY_PASS","UNICORN_HAIR","UNICORN_TEAR","PEARL","CHAPTER_1","CHAPTER_2","CHAPTER_3","FINCHES_2","LIBRARIAN_PASS","ARTEFACTS_1","ARTEFACTS_2","ARTEFACTS_3","ARGUMENT","ARTEFACTS_4","SHRINE_1","SHRINE_2","CLOAK_1","PYRITE","CLOAK_2","CLOAK_3","questList","unlocks","reward","when","join","quest","actionsByLocation","locations_1","allOxygenActions","allUnderseaActions"],"mappings":"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","file":"static/js/main.cf90fa77.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.Actions = exports.Locations = void 0;\n__exportStar(require(\"./state\"), exports);\n__exportStar(require(\"./items\"), exports);\nexports.Locations = __importStar(require(\"./locations\"));\n__exportStar(require(\"./quests\"), exports);\nexports.Actions = __importStar(require(\"./actions\"));\nexports.Util = __importStar(require(\"./util\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDuration = void 0;\nfunction padNumber(x, numOfDigits) {\n    return x.toString().padStart(numOfDigits, '0');\n}\nfunction formatDuration(millisecs) {\n    let secs = Math.floor(millisecs / 1000);\n    if (secs <= 60)\n        return secs + 's';\n    let mins = Math.floor(secs / 60);\n    secs %= 60;\n    if (mins < 60)\n        return `${mins}min ${padNumber(secs, 2)}s`;\n    const hrs = Math.floor(mins / 60);\n    mins %= 60;\n    return `${hrs}h ${padNumber(mins, 2)}min ${padNumber(secs, 2)}s`;\n}\nexports.formatDuration = formatDuration;\n","import React from 'react';\nimport './Header.css';\n\nexport interface HeaderProps {\n    chapter?: number;\n    deadline: Date | null;\n}\n\nconst UPDATE_INTERVAL = 1000 / 25;\n\nconst padTo2Digit = (x: number) => x.toString().padStart(2, '0');\n\nconst formatTime = (ms: number): string => {\n    const seconds = Math.floor(ms / 1000);\n    if (seconds < 60) return seconds + 's';\n\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) return `${minutes}m ${padTo2Digit(seconds % 60)}s`;\n\n    const hours = Math.floor(minutes / 60);\n    return `${hours}h ${padTo2Digit(minutes % 60)}m ${padTo2Digit(\n        seconds % 60\n    )}s`;\n};\n\nconst Header = (props: HeaderProps): React.ReactElement => {\n    const { chapter, deadline } = props;\n\n    const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            if (deadline == null) {\n                setTimeLeft(null);\n            } else {\n                setTimeLeft(deadline.valueOf() - Date.now());\n            }\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, deadline]);\n\n    return (\n        <header className=\"App-header\">\n            <div className=\"title\">\n                Ex Wanderlust\n                {chapter && (\n                    <span className=\"chapter-num\"> (Chapter {chapter})</span>\n                )}\n            </div>\n            <div className=\"info\">\n                {timeLeft != null && timeLeft > 0 && (\n                    <div className=\"info-item\">\n                        <div className=\"info-title\">Time Left</div>\n                        <div className=\"info-num\">{formatTime(timeLeft)}</div>\n                    </div>\n                )}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport io from 'socket.io-client';\n\nexport const ENDPOINT =\n    process.env.REACT_APP_BACKEND || 'http://localhost:8000';\n\nexport const socket = io(ENDPOINT, { autoConnect: false });\nexport const SocketContext = React.createContext<typeof socket | null>(null);\n","import React from 'react';\nimport { GlobalState, PlayerState } from 'wlcommon';\nimport { SocketContext } from '../socket/socket';\nimport './Login.css';\n\nexport interface NormalLoginProps {\n    updateLoggedIn: (x: boolean) => void;\n    updatePlayerState: (state: PlayerState) => void;\n    updateGlobalState: (state: GlobalState) => void;\n    updateTeamId: (x: number) => void;\n    mode: 'player' | 'mentor';\n}\n\nexport interface AdminLoginProps {\n    updateLoggedIn: (x: boolean) => void;\n    mode: 'admin';\n}\n\nexport type LoginProps = NormalLoginProps | AdminLoginProps;\n\ninterface AuthOkReplyPayload {\n    socketId: string;\n    globalState: GlobalState;\n    playerState: PlayerState;\n}\n\nconst Login = (props: LoginProps): React.ReactElement => {\n    const { updateLoggedIn, mode } = props;\n    const [groupName, setGroupName] = React.useState<number | undefined>(\n        undefined\n    );\n    const [password, setPassword] = React.useState('');\n    const [hasErrorMessage, setHasErrorMessage] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState('');\n\n    const socket = React.useContext(SocketContext);\n\n    React.useEffect(() => {\n        if (socket && !socket.connected) {\n            socket.connect();\n        }\n    }, [socket]);\n\n    function authenticateReply(eventType: 'error', payload: string): void;\n    function authenticateReply(\n        eventType: 'auth_ok',\n        payload: AuthOkReplyPayload\n    ): void;\n    function authenticateReply(\n        eventType: 'error' | 'auth_ok',\n        payload: string | AuthOkReplyPayload\n    ): void {\n        if (eventType === 'error') {\n            setHasErrorMessage(true);\n            setErrorMessage(payload as string);\n        } else {\n            updateLoggedIn(true);\n            console.log(mode);\n            if (mode !== 'admin') {\n                const {\n                    updatePlayerState,\n                    updateGlobalState,\n                    updateTeamId\n                } = props as NormalLoginProps;\n                const {\n                    playerState,\n                    globalState,\n                } = payload as AuthOkReplyPayload;\n                updatePlayerState(playerState);\n                updateGlobalState(globalState);\n                if (groupName) {\n                    updateTeamId(groupName);\n                }\n            }\n        }\n    }\n\n    const handleLogin = () => {\n        if (groupName === undefined && password === '') {\n            setHasErrorMessage(true);\n            setErrorMessage('Group Name and Password cannot be empty');\n            return;\n        } else if (groupName === undefined) {\n            setHasErrorMessage(true);\n            setErrorMessage('Group Name cannot be empty');\n            return;\n        } else if (password == '') {\n            setHasErrorMessage(true);\n            setErrorMessage('Password cannot be empty');\n            return;\n        }\n\n        if (socket !== null) {\n            socket.emit(\n                'authenticate',\n                { id: groupName, mode: mode, pass: password },\n                authenticateReply\n            );\n        }\n    };\n\n    const onGroupNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value === '') {\n            setGroupName(undefined);\n            return;\n        }\n        const groupId = parseInt(event.target.value);\n        if (Number.isNaN(groupId) || groupId < 0) return;\n        setGroupName(groupId);\n    };\n\n    return (\n        <div className=\"login\">\n            <div className=\"title\">Group Name</div>\n            <input\n                value={groupName === undefined ? '' : groupName.toString()}\n                onChange={onGroupNameChange}\n            ></input>\n            <div className=\"title\">Passcode</div>\n            <input\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            ></input>\n            <div>\n                <button className=\"loginButton\" onClick={handleLogin}>Login</button>\n            </div>\n            <div>\n                {hasErrorMessage && (\n                    <div className=\"errorMessage\">{errorMessage}</div>\n                )}\n                {!hasErrorMessage && (\n                    <div>\n                        <br></br>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { itemsById, Locations } from 'wlcommon';\nimport './Tooltip.css';\n\nexport interface TooltipProps {\n    isVisible: boolean;\n    tooltipType: TooltipType;\n    data: string[];\n    isRightSide: boolean;\n}\n\nexport const tooltipTypes = {\n    NONE: null,\n    INVENTORY: \"inventory\",\n    ACTION: \"action\",\n    LOCATION: \"location\"\n} as const;\n\nexport type TooltipType = (typeof tooltipTypes)[keyof typeof tooltipTypes];\n\nconst Tooltip = (props: TooltipProps): React.ReactElement => {\n    const { isVisible, tooltipType, data, isRightSide } = props;\n    \n    let title = \"\";\n    let details = <React.Fragment></React.Fragment>;\n    \n    if (!tooltipType) {\n        return <React.Fragment></React.Fragment>\n    }\n    \n    if (tooltipType === tooltipTypes.INVENTORY) {\n        const itemData = itemsById[data[0]];\n        title = itemData.name;\n        details = <p>{itemData.description}</p>;\n    }\n    \n    if (tooltipType === tooltipTypes.ACTION) {\n        title = data[0];\n        const reqLine = data[2] ? <p><b>Requirement</b>: {data[2]}</p> : undefined;\n        details = (\n            <React.Fragment>\n                <p>{data[1]}</p>\n                {reqLine}\n            </React.Fragment>\n        );\n    }\n    \n    if (tooltipType === tooltipTypes.LOCATION) {\n        const locationData = Locations.locationsMapping[data[0]];\n        title = locationData.name;\n        details = <p>{locationData.description}</p>;\n    }\n    \n    const style = {\n        display: isVisible ? \"\" : \"none\"\n    }\n    \n    const side = isRightSide ? \"rightTooltip\" : \"leftTooltip\";\n    \n    return (\n        <div \n            className={`tooltip ${side}`} \n            style={style}\n        >\n            <h2 className=\"tooltipTitle\">{title}</h2>\n            <div className=\"tooltipText\">{details}</div>\n        </div>\n    );\n}\n\nexport default Tooltip;","import React from 'react';\nimport { tooltipTypes, TooltipType } from '../Popups/Tooltip';\nimport { ItemId, itemDetails, itemsById } from 'wlcommon';\nimport './InventoryItem.css';\n\nexport interface InventoryItemProps {\n    name: ItemId;\n    triggerTooltip: (t?: TooltipType, d?: string[]) => () => void;\n}\n\nconst INVENTORY_ITEMS_ASSET_MAP: Map<ItemId, string> = new Map([\n    [itemDetails.MAP.id, \"world-map.png\"],\n    [itemDetails.OXYGEN_GUIDE.id, \"guide.png\"],\n    [itemDetails.MERMAID_DOLL.id, \"doll.png\"],\n    [itemDetails.PUMP.id, \"pump.png\"],\n    [itemDetails.BLACK_ROCK.id, \"rock.png\"],\n    [itemDetails.BUBBLE.id, \"pass.png\"]\n]);\n\nfunction getImg(item: ItemId): string {\n    const imgFileName = INVENTORY_ITEMS_ASSET_MAP.get(item);\n\n    if (!imgFileName) {\n        return '';\n    }\n\n    const imgFileDirectory = '/assets/inventory/';\n\n    return imgFileDirectory + imgFileName;\n}\n\nconst InventoryItem = (props: InventoryItemProps): React.ReactElement => {\n    const { name, triggerTooltip } = props;\n    \n    const triggerTooltipWithData = triggerTooltip(tooltipTypes.INVENTORY, [name]);\n\n    return (\n        <div \n            className=\"inventoryItem\" \n            onMouseEnter={triggerTooltipWithData} \n            onMouseLeave={triggerTooltip()}\n        >\n            <img src={getImg(name)} />\n            <br />\n            <span>{itemsById[name].name}</span>\n        </div>\n    );\n};\n\nexport default InventoryItem;\n","import React from 'react';\nimport { Util } from 'wlcommon';\nimport './Timer.css';\n\nexport interface TimerProps {\n    name: string;\n    until: Date;\n}\n\nconst TIMER_IMG_ASSET_MAP: Map<string, string> = new Map([\n    ['oxygen', 'oxygen.png'],\n    ['crimson', 'crimson.png'],\n]);\n\nconst UPDATE_INTERVAL = 1000 / 10;\n\nfunction getImg(name: string): string {\n    const imgFileName = TIMER_IMG_ASSET_MAP.get(name);\n\n    if (!imgFileName) {\n        return '';\n    }\n\n    const imgFileDirectory = '/assets/timers/';\n\n    return imgFileDirectory + imgFileName;\n}\n\nconst Timer = (props: TimerProps): React.ReactElement => {\n    const { name, until } = props;\n    const [timeLeft, setTimeLeft] = React.useState(\n        new Date(until).valueOf() - Date.now()\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(new Date(until).valueOf() - Date.now());\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, until]);\n\n    return (\n        <div className=\"timer\">\n            <img src={getImg(name)} />\n            <span>{Util.formatDuration(timeLeft)}</span>\n        </div>\n    );\n};\n\nexport default Timer;\n","import React from 'react';\nimport InventoryItem from './InventoryItem';\nimport Timer from './Timer';\nimport { TooltipType } from '../Popups/Tooltip';\nimport { ItemId, ItemRecord } from 'wlcommon';\nimport './TopBar.css';\n\nexport interface TopBarProps {\n    inventory: Record<ItemId, ItemRecord>;\n    oxygenUntil: Date | null;\n    crimsonUntil: Date;\n    triggerTooltip: (t?:TooltipType, d?:string[]) => () => void;\n}\n\nconst TopBar = (props: TopBarProps): React.ReactElement => {\n    const { inventory, oxygenUntil, triggerTooltip } = props;\n    const quantifiedInventory: ItemId[] = [];\n    Object.values(inventory).forEach((record: ItemRecord): void => {\n        for (let i = 0; i < record.qty; i++) {\n            quantifiedInventory.push(record.item);\n        }\n    });\n    \n    return (\n        <div className=\"topBar\">\n            <div className=\"inventory\">\n                { quantifiedInventory.map((item: ItemId) => { \n                    return (\n                        <InventoryItem \n                            key={item} \n                            name={item}\n                            triggerTooltip={triggerTooltip}\n                        />\n                    )\n                }) }\n            </div>\n            <div className=\"timers\">\n                {oxygenUntil && <Timer name=\"oxygen\" until={oxygenUntil} />}\n                {/*<Timer name=\"crimson\" time={crimsonTime} />*/}\n            </div>\n        </div>\n    );\n};\n\nexport default TopBar;\n","/*eslint-disable*/\n\nimport React from 'react';\nimport { tooltipTypes, TooltipType } from '../Popups/Tooltip';\nimport './Action.css';\n\nexport interface ActionProps {\n    action: string;\n    x: string;\n    y: string;\n    isVisible: boolean;\n    isEnabled: boolean;\n    handleAction: () => void;\n    triggerTooltip: (t?: TooltipType, d?: string[], b?: boolean) => () => void;\n    tooltipInfo: string[];\n}\n\nexport const Action = (props: ActionProps): React.ReactElement => {\n    const { action, x, y, isVisible, isEnabled, handleAction, triggerTooltip, tooltipInfo } = props;\n    \n    const position = {\n        top: y,\n        left: x,\n        display: isVisible ? \"\" : \"none\"\n    };\n    \n    const isTooltipRightSide = x.length < 5 || x < \"512px\";\n\n    return (\n        <div\n            className={`action ${isEnabled ? \"enabled\" : \"disabled\"}`} \n            style={position}\n            onClick={isEnabled ? handleAction : undefined}\n            onMouseEnter={triggerTooltip(tooltipTypes.ACTION, tooltipInfo ? tooltipInfo : [\"derp\", \"\", \"\"], isTooltipRightSide)}\n            onMouseLeave={triggerTooltip()}\n        >\n            <p>{action}</p>\n        </div>\n    );\n};\n\nexport default Action;\n","import React from 'react';\nimport { TooltipType, tooltipTypes } from '../Popups/Tooltip';\nimport { Locations, PlayerState } from 'wlcommon';\nimport './TravelPopup.css';\n\nexport interface TravelPopupProps {\n    playerState: PlayerState\n    isVisible: boolean;\n    setVisible: React.Dispatch<React.SetStateAction<boolean>>;\n    handleTravel: (a: Locations.LocationId) => () => void;\n    triggerTooltip: (t?: TooltipType, d?: string[], b?: boolean) => () => void;\n}\n\n\nconst TravelPopup = (props: TravelPopupProps): React.ReactElement => {\n    const { playerState, isVisible, setVisible, handleTravel, triggerTooltip } = props;\n\n    const visibility = isVisible ? \"inline\" : \"none\";\n    const locationIds = Object.values(Locations.locationIds);\n\n    function handleTravelClosePopup(id: Locations.LocationId) {\n        return () => {\n            setVisible(false);\n            handleTravel(id)();\n        };\n    }\n\n    function canTravel(location: Locations.Location) {\n        if (location.id == playerState.locationId) {\n            return false;\n        } else if (location.id == Locations.locationIds.ALCOVE) {\n            return playerState.unlockedAlcove;\n        } else if (location.id == Locations.locationIds.SHRINE) {\n            return playerState.unlockedShrine;\n        } else if (location.id == Locations.locationIds.WOODS) {\n            return playerState.unlockedWoods;\n        } else if (location.needsMap) {\n            if (location.id == Locations.locationIds.STORE) {\n                console.log(location);\n            }\n            return playerState.hasMap;\n        } else if (playerState.locationId != Locations.locationIds.SHORES && playerState.locationId != Locations.locationIds.WOODS) {\n            return location.id != Locations.locationIds.SHORES && location.id != Locations.locationIds.WOODS;\n        } else {\n            return true;\n        }\n    }\n\n    return (\n        <div style={{ display: visibility }}>\n            <div\n                className=\"backgroundShroud\"\n                onClick={() => setVisible(false)}\n            ></div>\n            <div className=\"travelPopup\">\n                <p>\n                    <b>Travel</b> - Where would you like to go?\n                </p>\n                <div className=\"buttonContainer\">\n                    {locationIds.map(\n                        (\n                            locationId: Locations.LocationId\n                        ): React.ReactElement => {\n                            const location: Locations.Location =\n                                Locations.locationsMapping[locationId];\n\n                            const travellable = canTravel(location);\n                            const display = { display: travellable ? \"\" : \"none\"}\n                            return (\n                                <button className=\"travelButton\" style={display}\n                                    key=\"\"\n                                    onClick={handleTravelClosePopup(\n                                        location.id\n                                    )}\n                                    onMouseEnter={triggerTooltip(\n                                        tooltipTypes.LOCATION, \n                                        [location.id]\n                                    )}\n                                    onMouseLeave={triggerTooltip()}\n                                >\n                                    {location.name}\n                                </button>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TravelPopup;\n","import { PlayerState } from \"wlcommon\";\n\nexport type StatePredicate = (playerState: PlayerState) => boolean;\n\nexport class PlayerAction {\n    description: string;\n    task: string;\n    x: string;\n    y: string;\n    getVisibility?: StatePredicate;\n    getEnabled?: StatePredicate;\n    isVisible: boolean;\n    isEnabled: boolean;\n    constructor(description: string, task: string, x: string, y: string, visibility?: StatePredicate, enabled?: StatePredicate) {\n        this.description = description;\n        this.task = task;\n        this.x = x;\n        this.y = y;\n        this.isVisible = true;\n        this.isEnabled = true;\n        this.getVisibility = visibility;\n        this.getEnabled = enabled;\n    }\n}\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"45px\", \"120px\")\n}\n\nconst Shallows = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('shallows.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Shallows;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.SHORES.DIVE]: new PlayerAction(\"Dive into the deep, blue sea. After diving, you will enter the Shallows location inside the Undersea. You will start your dive with 20 minutes of Oxygen.\", \n        \"Create a shape resembling a diving board with all of your arms.\", \"445px\", \"309px\")\n}\n\nconst Shores = (props: SpecificLocationProps): React.ReactElement => {\n    const { handleAction, triggerTooltip } = props;\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('shores.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Shores;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions, questIds } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.CORALS.EXPLORE]: new PlayerAction(\"The Memorial Corals is a location of historical importance. There are various exhibits in the park. You can spend some time to look around the exhibits.\", \n        \"Use 5 minutes of Oxygen.\", \"743px\", \"265px\"),\n    [Actions.specificActions.CORALS.LEARN_LANG]: new PlayerAction(\n        \"The ancient language of the Undersea is interesting. Devote some time to learning it.\", \n        \"Gather items: 2 brushes, 2 pieces of paper, 2 storybooks; Each person then has to say 'hi' in a different language and say what language it is.\",\n        \"427px\", \"419px\",\n        (playerState) => playerState.quests[questIds.FINCHES]?.status === 'incomplete'\n    ),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\",\n        (playerState) => playerState.storedOxygen !== null),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\",\n        (playerState) => playerState.storedOxygen !== null),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"26px\", \"106px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"There is a small oxygen stream at the Memorial Corals. By Undersea law, after topping up Oxygen, you must wait 5 minutes before you can top up Oxygen at the same Oxygen Stream.\", \n        \"Each person has to present a fully filled water bottle to the mentors to receive 20 minutes of Oxygen.\",\n        \"108px\", \"438px\")\n}\n\nconst Corals = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    const actionProps = Object.entries(actions).map(([actionId, playerAction]) => ({\n        action: actionId,\n        x: playerAction.x,\n        y: playerAction.y,\n        isVisible: playerAction.getVisibility ? playerAction.getVisibility(playerState) : true,\n        isEnabled: playerAction.getEnabled ? playerAction.getEnabled(playerState) : true,\n        handleAction: handleAction(actionId),\n        triggerTooltip: triggerTooltip,\n        tooltipInfo: [actionId, playerAction.description, playerAction.task]\n    }));\n    \n    /*\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.CORALS.EXPLORE].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key)\n        }\n        actionProps.push(currActionProps);\n    }\n    */\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('corals.png')} />\n            {actionProps.map((info: ActionProps, index) => {\n                return <Action key={index} {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Corals;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.STORE.BUY_MAP]: new PlayerAction(\"This map will let you find your way to more locations in the Undersea.\", \n        \"Pay 5 minutes of Oxygen to receive 1 x Map.\", \"577px\", \"549px\"),\n    [Actions.specificActions.STORE.BUY_GUIDE]: new PlayerAction(\"It's an introduction of all the Oxygen Streams in the Undersea.\",\n        \"Pay 5 minutes of Oxygen to receive 1 x Guide to the Oxygen Streams of the Undersea.\", \"717px\", \"308px\"),\n    [Actions.specificActions.STORE.BUY_DOLL]: new PlayerAction(\"It's a doll of The Little Mermaid! How cute UWU.\",\n        \"Pay 10 minutes of Oxygen to receive 1 x Mermaid Doll.\", \"451px\", \"221px\"),\n    [Actions.specificActions.STORE.BUY_DISCOVERS]: new PlayerAction(\"This ticket lets you go on the full tour of the Statue of Triton.\", \n        \"Pay 20 minutes of Oxygen to receive 1 x UnderseaDiscovers Ticket.\", \"278px\", \"140px\"),\n    [Actions.specificActions.STORE.BUY_PUMP]: new PlayerAction(\"This pump allows you to store all your Oxygen before you resurface, so it doesn't go to waste.\", \n        \"Pay 30 minutes of Oxygen to receive 1 x Oxygen Pump.\", \"810px\", \"209px\"),\n    [Actions.specificActions.STORE.BUY_BLACK_ROCK]: new PlayerAction(\"It's a strange looking black rock. There are odd markings on it. Nobody knows what its uses, or properties are...\", \n        \"Pay 30 minutes of Oxygen to receive 1 x Mysterious Black Rock.\", \"252px\", \"495px\"),\n    [Actions.specificActions.STORE.BUY_BUBBLE_PASS]: new PlayerAction(\"This golden pass lets you access the Bubble Factory. It has no expiry date and can be used multiple times.\", \n        \"Pay 40 minutes of Oxygen to receive 1 x Bubble Pass.\", \"433px\", \"344px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"99px\", \"251px\")\n}\n\nconst Store = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    if (playerState.inventory['Map']?.qty) {\n        actions[Actions.specificActions.STORE.BUY_MAP].isVisible = false;\n    }\n    if (playerState.inventory['OxygenGuide']?.qty) {\n        actions[Actions.specificActions.STORE.BUY_GUIDE].isVisible = false;\n    }\n    if (playerState.inventory['Pump']?.qty) {\n        actions[Actions.specificActions.STORE.BUY_PUMP].isVisible = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.STORE.BUY_MAP].isEnabled = false;\n        actions[Actions.specificActions.STORE.BUY_GUIDE].isEnabled = false;\n    }\n    if (timeLeft < 600000 ) {\n        actions[Actions.specificActions.STORE.BUY_DOLL].isEnabled = false;\n    }\n    if (timeLeft < 1200000 ) {\n        actions[Actions.specificActions.STORE.BUY_DISCOVERS].isEnabled = false;\n    }\n    if (timeLeft < 1800000 ) {\n        actions[Actions.specificActions.STORE.BUY_PUMP].isEnabled = false;\n        actions[Actions.specificActions.STORE.BUY_BLACK_ROCK].isEnabled = false;\n    }\n    if (timeLeft < 2400000 ) {\n        actions[Actions.specificActions.STORE.BUY_BUBBLE_PASS].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('store.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Store;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.WOODS.GET_HAIR]: new PlayerAction(\"It is said that a herd of unicorns live in the Whispering Woods, and they only appear to the pure of heart. Fortunately, we only need to find the hair that they shed.\", \n        \"Share a point in time when you received help and support from others to receive 1 X Unicorn Hair.\", \"703px\", \"382px\")\n}\n\nconst Woods = (props: SpecificLocationProps): React.ReactElement => {\n    const { handleAction, triggerTooltip } = props;\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('woods.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Woods;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.STATUE.EXPLORE]: new PlayerAction(\"The Statue of Triton is a monument to Triton, famed hero of the Undersea. Walk around the statue to learn more about Triton.\", \n        \"Use 5 minutes of Oxygen.\", \"256px\", \"441px\"),\n    [Actions.specificActions.STATUE.DECODE_ENGRAVING]: new PlayerAction(\"You have found an engraving written in the ancient language. Decode it to learn what it says.\", \n        \"Decode 'Vwwh Ujaekgf'\", \"250px\", \"553px\"),\n    [Actions.specificActions.STATUE.CAST_COOLING_AURA]: new PlayerAction(\"The Crimson's body temperature is kept low as part of its slumber. Prevent it from getting too high!\",\n        \"Water Parade.\", \"414px\", \"324px\"),\n    [Actions.specificActions.STATUE.STRENGTHEN_BEFUDDLEMENT]: new PlayerAction(\"A Befuddlement Spell keeps the Crimson from waking up. However, it may weaken over time, and you will have to strengthen it.\",\n        \"Do 10 Jumping Jacks/Buddha Claps.\", \"125px\", \"122px\"),\n    [Actions.specificActions.STATUE.POWER_CONTAINMENT]: new PlayerAction(\"The Containment Arrays attempt to isolate the Crimson so that it doesn't sense the artefacts and awaken. You will need to power it to keep the isolation secure.\",\n        \"Everyone to present a different battery brand/type (including portable batteries).\", \"376px\", \"135px\"),\n    [Actions.specificActions.STATUE.PURIFY_CORRUPTION]: new PlayerAction(\"As the Crimson begins to awaken, it will start to corrupt the surroundings. It draws even more power from this corruption. You will need to purify the corruption to keep the Crimson weak.\",\n        \"Everyone to present a hand sanitiser of different brands.\", \"100px\", \"304px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"689px\", \"100px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"The Statue of Triton has a publicly-accessible storage of Oxygen, which slowly builds up 4 minutes of Oxygen every minute. You can get all the Oxygen inside this store. Note that this storage is shared between everyone.\", \n        \"Conduct a Water Parade (skip if fasting) to receive all Oxygen stored at the statue.\",\n        \"826px\", \"238px\") \n}\n\nconst Statue = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    if (!playerState.knowsLanguage) {\n        actions[Actions.specificActions.STATUE.DECODE_ENGRAVING].isVisible = false;\n    }\n    if (!playerState.knowsCrimson) {\n        actions[Actions.specificActions.STATUE.CAST_COOLING_AURA].isVisible = false;\n        actions[Actions.specificActions.STATUE.STRENGTHEN_BEFUDDLEMENT].isVisible = false;\n        actions[Actions.specificActions.STATUE.POWER_CONTAINMENT].isVisible = false;\n        actions[Actions.specificActions.STATUE.PURIFY_CORRUPTION].isVisible = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.STATUE.EXPLORE].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('statue.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Statue;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.LIBRARY.EXPLORE]: new PlayerAction(\"Talk to the librarians about the Marine Library.\", \n        \"Use 5 minutes of Oxygen.\", \"432px\", \"385px\"),\n    [Actions.specificActions.LIBRARY.STUDY_CRIMSON]: new PlayerAction(\"Learn more about the Crimson, a crisis that took place 10,000 years ago.\", \n        \"Have any member share an incident when things did not go as planned for a training/ project and how did the plan get adapted.\", \"99px\", \"503px\"),\n    [Actions.specificActions.LIBRARY.STUDY_ARTEFACT]: new PlayerAction(\"Learn more about the artefacts.\", \n        \"Create a new group cheer and do it to energise yourselves.\", \"630px\", \"202px\"),\n    [Actions.specificActions.LIBRARY.DECODE_ARTEFACT]: new PlayerAction(\"The artefact legend is written in an ancient language. You will need to decode it before you can understand it.\", \n        \"Decode 'Hwljaxawv Ljalgf'.\", \"703px\", \"265px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"33px\", \"171px\")\n}\n\nconst Library = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n    \n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    if (!playerState.knowsLanguage) {\n        actions[Actions.specificActions.LIBRARY.DECODE_ARTEFACT].isEnabled = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.LIBRARY.EXPLORE].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('library.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Library;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.ANCHOVY.EXPLORE]: new PlayerAction(\"Anchovy Avenue is a residential district. The Chief Librarian of the Marine Library is said to live here.\", \n        \"Use 5 minutes of Oxygen.\", \"466px\", \"354px\"),\n    [Actions.specificActions.ANCHOVY.INSPIRE]: new PlayerAction(\"Inspire the Chief Librarian with your leadership!\", \n        \"Have any member of your team perform Project Inspire.\", \"294px\", \"533px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"209px\", \"120px\")\n}\n\nconst Anchovy = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.ANCHOVY.EXPLORE].isEnabled = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('anchovy4.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Anchovy;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.BARNACLE.EXPLORE]: new PlayerAction(\"Barnacle Residences is a residential district. The Pyrite Lady is said to live here.\", \n        \"Use 5 minutes of Oxygen.\", \"445px\", \"211px\"),\n    [Actions.specificActions.BARNACLE.HELP]: new PlayerAction(\"The Pyrite Lady has mixed up some of her potion ingredients. Help her!\", \n        \"Create a list of youngest to oldest of your whole group.\", \"437px\", \"471px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"729px\", \"113px\")\n}\n\nconst Barnacle = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n    \n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.BARNACLE.EXPLORE].isEnabled = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('barnacle.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Barnacle;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.SALMON.EXPLORE]: new PlayerAction(\"Salmon Street is a residential district. It was built around an Oxygen Stream located here.\", \n        \"Use 5 minutes of Oxygen.\", \"578px\", \"362px\"),\n    [Actions.specificActions.SALMON.CONFRONT]: new PlayerAction(\"The children are chasing each other with the long and pointy stick. Tell them what is right.\", \n        \"Have any member of your team perform Project MTW.\", \"142px\", \"542px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"18px\", \"96px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"The Oxygen Stream at Salmon Street is curiously linked with the one located at Catfish Crescent. Both need to be activated at roughly the same time, before you can receive 40 minutes of Oxygen.\", \n        \"Recite Red Cross Promise.\", \"827px\", \"127px\")\n}\n\nconst Salmon = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n    \n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n    \n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.SALMON.EXPLORE].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('salmon.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Salmon;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.KELP.EXPLORE]: new PlayerAction(\"The Kelp Plains is full of seaweed, and stretches for miles and miles, and is full of seaweed. Perhaps you can find what you're looking for here.\", \n        \"Use 5 minutes of Oxygen.\", \"73px\", \"347px\"),\n    [Actions.specificActions.KELP.CLIMB_DOWN]: new PlayerAction(\"You have found a small shrine tucked away in a valley. However, the journey there looks difficult.\", \n        \"Online Maze: https://www.mathsisfun.com/games/mazes.html. Complete one Hard maze.\", \"360px\", \"487px\"),\n    [Actions.specificActions.KELP.HARVEST]: new PlayerAction(\"Harvest some blinkseed here.\", \n        \"Have a member receive a message from the mentors. The rest of you have to lipread what he/she is saying.\", \"510px\", \"284px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"122px\", \"117px\")\n}\n\nconst Kelp = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.KELP.EXPLORE].isEnabled = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('kelp.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Kelp;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.UMBRAL.EXPLORE]: new PlayerAction(\"This is a shady, run-down area. Apparently it used to be a residential district, but the Oxygen Stream here vanished one day, suddenly. You shudder as you walk around the area.\", \n        \"Use 5 minutes of Oxygen.\", \"656px\", \"402px\"),\n    [Actions.specificActions.UMBRAL.GIVE_PAN]: new PlayerAction(\"Show Alyusi the Pyrite Pan.\", \n        \"Show Pyrite Pan.\", \"579px\", \"197px\"),\n    [Actions.specificActions.UMBRAL.GIVE_ROCK]: new PlayerAction(\"Give Alyusi the Chmyrrkyth.\", \n        \"Give 1 x Mysterious Black Rock.\", \"749px\", \"177px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"60px\", \"304px\")\n}\n\nconst Umbral = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    if (!playerState.inventory['PyritePan']?.qty) {\n        actions[Actions.specificActions.UMBRAL.GIVE_PAN].isEnabled = false;\n    }\n    if (!playerState.inventory['BlackRock']?.qty) {\n        actions[Actions.specificActions.UMBRAL.GIVE_ROCK].isEnabled = false;\n    }\n\n    const UPDATE_INTERVAL = 1000 / 10;\n    const [timeLeft, setTimeLeft] = React.useState(\n        playerState.oxygenUntil\n            ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n            : playerState.pausedOxygen\n                ? playerState.pausedOxygen\n                : 0\n    );\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setTimeLeft(playerState.oxygenUntil \n                ? new Date(playerState.oxygenUntil).valueOf() - Date.now()\n                : playerState.pausedOxygen\n                    ? playerState.pausedOxygen\n                    : 0);\n        }, UPDATE_INTERVAL);\n        return () => clearInterval(timer);\n    }, [setTimeLeft, UPDATE_INTERVAL, playerState.oxygenUntil, playerState.pausedOxygen]);\n\n    if (timeLeft < 300000 ) {\n        actions[Actions.specificActions.UMBRAL.EXPLORE].isEnabled = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('umbral.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Umbral;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"615px\", \"141px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"There is a large Oxygen Stream here, however, it has fallen into disrepair. Getting Oxygen from here will be slightly more challenging, but you can still expect to get 40 minutes of Oxygen here.\", \n        \"2 Cadets to be blindfolded, while the rest of the group are to instruct them to draw a wrench and toolbox respectively.\", \"198px\", \"491px\")\n}\n\nconst Tuna = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('tuna.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Tuna;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"169px\", \"348px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"The Oxygen Stream at Catfish Crescent is curiously linked with the one located at Salmon Street. Both need to be activated at roughly the same time, before you can receive 40 minutes of Oxygen.\", \n        \"Recite Red Cross Promise.\", \"558px\", \"152px\")\n}\n\nconst Catfish = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('catfish.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Catfish;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"434px\", \"524px\"),\n    [Actions.ALL_OXYGEN.GET_OXYGEN]: new PlayerAction(\"Each of you has to show a different item from the following: Pencil case, phone application and items you bring on a holiday\", \n        \"Recite Red Cross Promise.\", \"55px\", \"239px\")\n}\n\nconst Bubble = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n    \n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    if (playerState.hasBubblePass != true) {\n        actions[Actions.ALL_OXYGEN.GET_OXYGEN].isEnabled = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('bubble.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Bubble;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.SHRINE.GIVE_HAIR]: new PlayerAction(\"The shrinekeeper says he can transform a Unicorn's Hair into a Unicorn's Tear.\", \n        \"Give 1 x Unicorn's Hair.\", \"434px\", \"449px\"),\n    [Actions.specificActions.SHRINE.COLLECT_HAIR]: new PlayerAction(\"Collect the Unicorn Tear from the Shrine.\", \n        \"Receive 1 x Unicorn Tear.\", \"434px\", \"449px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"52px\", \"123px\")\n}\n\nconst Shrine = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n    \n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('shrine.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Shrine;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport { SpecificLocationProps, imgDirectoryGenerator } from './LocationComponent';\nimport { Actions } from 'wlcommon';\nimport { PlayerAction } from '../../PlayerAction';\n\nconst actions: Record<string, PlayerAction> = {\n    [Actions.specificActions.ALCOVE.RETRIEVE_PEARL]: new PlayerAction(\"You know what you're here for.\", \n        \"Receive 1 x Pearl of Asclepius.\", \"409px\", \"399px\"),\n    [Actions.ALL_UNDERWATER.STORE_OXYGEN]: new PlayerAction(\"Store all your Oxygen (except 2 mins, enough for you to resurface) into your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"488px\"),\n    [Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN]: new PlayerAction(\"Withdraw all Oxygen from your Oxygen Pump.\", \n        \"No task required.\", \"870px\", \"543px\"),\n    [Actions.ALL_UNDERWATER.RESURFACE]: new PlayerAction(\"Return to Sleepy Shore. Note that when you return to the surface, all your oxygen will be lost as it escapes into the air!\",\n        \"No task required.\", \"729px\", \"101px\")\n}\n\nconst Alcove = (props: SpecificLocationProps): React.ReactElement => {\n    const { playerState, handleAction, triggerTooltip } = props;\n\n    if (playerState.storedOxygen == null) {\n        actions[Actions.ALL_UNDERWATER.STORE_OXYGEN].isVisible = false;\n        actions[Actions.ALL_UNDERWATER.WITHDRAW_OXYGEN].isVisible = false;\n    }\n\n    const actionProps: ActionProps[] = [];\n    for (const key in actions) {\n        const playerAction = actions[key];\n        const currActionProps: ActionProps = {\n            action: key,\n            x: playerAction.x,\n            y: playerAction.y,\n            isVisible: playerAction.isVisible,\n            isEnabled: playerAction.isEnabled,\n            handleAction: handleAction(key),\n            triggerTooltip: triggerTooltip,\n            tooltipInfo: [key, playerAction.description, playerAction.task]\n        }\n        actionProps.push(currActionProps);\n    }\n\n    return (\n        <React.Fragment>\n            <img src={imgDirectoryGenerator('alcove.png')} />\n            {actionProps.map((info: ActionProps) => {\n                return <Action key=\"\" {...info} />;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default Alcove;\n","import React from 'react';\nimport { Action, ActionProps } from './Action';\nimport TravelPopup from './TravelPopup';\nimport { TooltipType, tooltipTypes } from '../Popups/Tooltip';\nimport { Locations, PlayerState } from 'wlcommon';\nimport './LocationComponent.css';\n\nimport Shallows from './Shallows';\nimport Shores from './Shores';\nimport Corals from './Corals';\nimport Store from './Store';\nimport Woods from './Woods';\nimport Statue from './Statue';\nimport Library from './Library';\nimport Anchovy from './Anchovy';\nimport Barnacle from './Barnacle';\nimport Salmon from './Salmon';\nimport Kelp from './Kelp';\nimport Umbral from './Umbral';\nimport Tuna from './Tuna';\nimport Catfish from './Catfish';\nimport Bubble from './Bubble';\nimport Shrine from './Shrine';\nimport Alcove from './Alcove';\n\nexport interface LocationProps {\n    playerState: PlayerState;\n    handleAction: (a: string) => () => void;\n    handleTravel: (a: Locations.LocationId) => () => void;\n    triggerTooltip: (t?: TooltipType, d?: string[], b?: boolean) => () => void;\n    isMentor?: boolean;\n}\n\nexport interface SpecificLocationProps {\n    playerState: PlayerState;\n    handleAction: (a: string) => () => void;\n    triggerTooltip: (t?: TooltipType, d?: string[], b?: boolean) => () => void;\n}\n\nexport function getSpecificLocationComponent(playerState: PlayerState,\n    handleAction: (a: string) => () => void, \n    triggerTooltip: (t?: TooltipType, d?: string[], b?: boolean) => () => void): React.ReactElement {\n        \n    const specificLocationComponentProps = {\n        playerState: playerState,\n        handleAction: handleAction,\n        triggerTooltip: triggerTooltip\n    };\n            \n    const SPECIFIC_LOCATION_COMPONENT_MAP: Map<Locations.LocationId, React.ReactElement> = new Map([\n        [\n            Locations.locationIds.SHALLOWS, \n            <Shallows key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.SHORES, \n            <Shores key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.CORALS, \n            <Corals key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.STORE, \n            <Store key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.WOODS, \n            <Woods key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.STATUE, \n            <Statue key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.LIBRARY, \n            <Library key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.ANCHOVY, \n            <Anchovy key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.BARNACLE, \n            <Barnacle key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.SALMON, \n            <Salmon key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.KELP, \n            <Kelp key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.UMBRAL, \n            <Umbral key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.TUNA, \n            <Tuna key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.CATFISH, \n            <Catfish key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.BUBBLE, \n            <Bubble key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.SHRINE, \n            <Shrine key=\"\" {...specificLocationComponentProps} />\n        ],\n        [\n            Locations.locationIds.ALCOVE, \n            <Alcove key=\"\" {...specificLocationComponentProps} />\n        ],\n    ]);\n    \n    const component = SPECIFIC_LOCATION_COMPONENT_MAP.get(playerState.locationId);\n    if (!component) {\n        return <React.Fragment></React.Fragment>;\n    }\n    return component;\n}\n\nexport function imgDirectoryGenerator(imgFileName: string): string {\n    return '/assets/locations/' + imgFileName;\n}\n\nconst LocationComponent = (props: LocationProps): React.ReactElement => {\n    const { playerState, handleAction, handleTravel, triggerTooltip, isMentor } = props;\n    \n    const location: Locations.Location = Locations.locationsMapping[playerState.locationId];\n    \n    const isTravelVisible = playerState.locationId != Locations.locationIds.SHORES || playerState.unlockedWoods == true;\n    const [isTravelPopupVisible, setIsTravelPopupVisible] = React.useState(false);  \n    const travelActionProps: ActionProps = {\n        action: \"Travel\",\n        x: \"870px\",\n        y: \"433px\",\n        isVisible: isTravelVisible,\n        isEnabled: true,\n        handleAction: () => {\n            if (!isMentor) {\n                setIsTravelPopupVisible(true);\n            }\n        },\n        triggerTooltip: triggerTooltip,\n        tooltipInfo: [\"Travel\", \"Go somewhere else in this wonderful world!\", \"\"]\n    }\n    \n    return (\n        <div className=\"location\">\n            <p \n                className=\"currLocationTitle\"\n                onMouseEnter={triggerTooltip(tooltipTypes.LOCATION, [playerState.locationId])}\n                onMouseLeave={triggerTooltip()}\n            >\n                {location.name}\n            </p>\n            { getSpecificLocationComponent(playerState, handleAction, triggerTooltip) }\n            <Action {...travelActionProps} />\n            <TravelPopup\n                playerState={playerState}\n                isVisible={isTravelPopupVisible} \n                setVisible={setIsTravelPopupVisible} \n                handleTravel={handleTravel} \n                triggerTooltip={triggerTooltip}\n            />\n        </div>\n    );\n};\n\nexport default LocationComponent;\n","import React from 'react';\nimport './Notifications.css';\n\nexport interface NotificationProps {\n    time: Date;\n    message: string;\n}\n\nconst recentNotifTiming = 5000;\n\nfunction determineIfDateClose(d1: Date, d2: Date): boolean {\n    return (d1.valueOf() - d2.valueOf()) < recentNotifTiming;\n}\n\nfunction determineIfRecent(d: Date): boolean {\n    return determineIfDateClose(new Date(), d);\n}\n\nconst Notification = (props: NotificationProps): React.ReactElement => {\n    const { time, message } = props;\n    \n    const [isRecent, setIsRecent] = React.useState<boolean>(determineIfRecent(time));\n    \n    if (determineIfRecent(time)) {\n        setInterval(() => setIsRecent(false),\n            recentNotifTiming - (Date.now() - time.valueOf()));\n    }\n    \n    return (\n        <p className={`notif ${isRecent ? \"recentNotif\" : \"oldNotif\"}`}>\n            {message}\n        </p>\n    );\n}\n\nexport default Notification;\n    ","import React from 'react';\nimport Notification from './Notification';\nimport { Message } from 'wlcommon';\nimport './Notifications.css';\n\nexport interface NotificationsProps {\n    notifications: Message[];\n}\n\nconst Notifications = (props: NotificationsProps): React.ReactElement => {\n    const { notifications } = props;\n    notifications.sort((n1, n2) => n1.time < n2.time ? 1 : -1)\n    \n    function notifToDisplayString(message: Message): string {\n        return `[${(new Date(message.time)).toTimeString().slice(0, 5)}]  ${message.message}`;\n    }\n    \n    return (\n        <div className=\"notifications\">\n            <h2 className=\"notifTitle\">NOTIFICATIONS</h2>\n            <div className=\"innerNotifBox\">\n                {notifications.map((message: Message) => {\n                    return (<Notification\n                        key={message.time.toString()}\n                        time={new Date(message.time)}\n                        message={notifToDisplayString(message)}\n                    />);\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport { quests, QuestState } from 'wlcommon';\nimport './QuestInfo.css';\n\nexport interface QuestInfoProps {\n    questState: QuestState;\n}\n\nconst QuestInfo = (props: QuestInfoProps): React.ReactElement => {\n    const { questState } = props;\n\n    const questInfo = quests[questState.id];\n    const questName = questInfo.name;\n    const questSteps: string[] = [];\n    \n    if (questInfo.stageOrder === \"inOrder\") {\n        const currProgress = questState.stages.indexOf(false);\n        questSteps.push(questInfo.stages[currProgress]);\n    }\n    \n    if (questInfo.stageOrder === \"anyOrder\") {\n        for (let i = 0; i < questInfo.stages.length; i++) {\n            questSteps.push(`\\u{2022} ${questInfo.stages[i]}`);\n        }\n    }\n\n    return (\n        <div className=\"questInfo\">\n            <h4 className=\"questName\">{questName}</h4>\n            { questSteps.map((info) => <p key=\"\" className=\"questStep\">{info}</p>) }\n        </div>\n    );\n};\n\nexport default QuestInfo;\n","import React from 'react';\nimport QuestInfo from './QuestInfo';\nimport { QuestId, QuestState } from 'wlcommon';\nimport './QuestLog.css';\n\nexport interface QuestLogProps {\n    quests: Record<QuestId, QuestState>;\n}\n\nconst QuestLog = (props: QuestLogProps): React.ReactElement => {\n    const { quests } = props;\n    \n    const questStates: QuestState[] = Object.values(quests)\n        .filter((qs) => qs.status !== \"completed\")\n        .sort((q1, q2) => q1.id < q2.id ? 1 : -1);\n\n    return (\n        <div className=\"questLog\">\n            <h2 className=\"questTitle\">QUESTS</h2>\n            <div className=\"innerQuestBox\">\n                {questStates.map((item: QuestState) => (\n                    <QuestInfo key=\"\" questState={item} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default QuestLog;\n","import React from 'react';\nimport Notifications from './Notifications';\nimport QuestLog from './QuestLog';\nimport { Message, QuestId, QuestState } from 'wlcommon';\nimport './BottomBar.css';\n\nexport interface BottomBarProps {\n    notifications: Message[];\n    quests: Record<QuestId, QuestState>;\n}\n\nconst BottomBar = (props: BottomBarProps): React.ReactElement => {\n    const { notifications, quests } = props;\n\n    return (\n        <div className=\"bottomBar\">\n            <Notifications key = {notifications.length} notifications={notifications} />\n            <QuestLog quests={quests} />\n        </div>\n    );\n};\n\nexport default BottomBar;\n","import React from 'react';\nimport './Journal.css';\n\nconst Journal = (): React.ReactElement => {\n    return <div className=\"journal\"></div>;\n};\n\nexport default Journal;\n","import React from 'react';\nimport { Action } from 'wlcommon';\nimport './OnActionPopup.css';\n\nexport interface OnActionPopupProps {\n    action: Action | null;\n    priority?: boolean;\n    isMentor?: boolean;\n    mentorProps?: OnActionPopupMentorProps;\n}\n\nexport interface OnActionPopupMentorProps {\n    handleActionApprove: () => void;\n    handleActionReject: () => void;\n}\n\nconst OnActionPopup = (props: OnActionPopupProps): React.ReactElement => {\n    const { action, priority, isMentor, mentorProps } = props;\n    \n    if (!action || (isMentor && action === \"pause\")) {\n        return <React.Fragment></React.Fragment>;\n    }\n    \n    if (isMentor && mentorProps) {\n        const { handleActionApprove, handleActionReject } = mentorProps;\n        return (\n            <React.Fragment>\n                <div className={`onActionPopup ${priority ? \"priorityLayer\" : \"normalLayer\"}`}>\n                    <h2>Performing Action...</h2>\n                    <p>Your group is currently performing an action: {action}</p>\n                    <p>Approve?</p>\n                    <button onClick={handleActionApprove}>Yes</button>\n                    <button onClick={handleActionReject}>No</button>\n                </div>\n                <div className=\"onActionBackgroundShroud\"></div>\n            </React.Fragment>\n        );\n    }\n    \n    let popupText: React.ReactElement;\n    if (action === \"pause\") {\n        popupText = (\n            <React.Fragment>\n                <h2>Pause</h2>\n                <p>Your mentor has paused the exercise.</p>\n                <p>Please wait for your mentor to resume...</p>\n            </React.Fragment>\n        );\n    } else {\n        popupText = (\n            <React.Fragment>\n                <h2>Performing Action...</h2>\n                <p>You are currently performing an action: {action}</p>\n                <p>Please wait for mentor approval...</p>\n            </React.Fragment>\n        );\n    }\n    \n    return (\n        <React.Fragment>\n            <div className={`onActionPopup ${priority ? \"priorityLayer\" : \"normalLayer\"}`}>\n                {popupText}\n            </div>\n            <div className=\"onActionBackgroundShroud\"></div>\n        </React.Fragment>\n    );\n}\n\nexport default OnActionPopup;","import React from 'react';\nimport TopBar from './TopBar/TopBar';\nimport LocationComponent from './Location/LocationComponent';\nimport BottomBar from './BottomBar/BottomBar';\nimport Journal from './Journal/Journal';\nimport OnActionPopup from './Popups/OnActionPopup';\nimport { OnActionPopupProps, OnActionPopupMentorProps } from './Popups/OnActionPopup';\nimport { TooltipType } from './Popups/Tooltip';\nimport Tooltip from './Popups/Tooltip';\nimport { PlayerState, GlobalState, Locations, Message } from 'wlcommon';\nimport './Game.css';\nimport { SocketContext } from '../socket/socket';\n\nexport interface GameProps {\n    globalState: GlobalState;\n    playerState: PlayerState;\n    teamId: number;\n    isMentor?: boolean;\n    gameMentorProps?: GameMentorProps;\n}\n\nexport interface GameMentorProps {\n    onActionPopupMentorProps: OnActionPopupMentorProps;\n}\n\n/*\n    Organization of components:\n        TopBar\n            - Inventory\n            - TopRightHUD\n        Location\n            - Background\n            - Actions\n            - Location bar\n        BottomBar\n            - Notifications\n            - Quests\n        Journal\n            - Tabs\n            - Contents {Journal, Notes, Oxygen}\n        Popup?\n            - Various popup windows\n*/\n\nconst Game = (props: GameProps): React.ReactElement => {\n    const { globalState, playerState, teamId, isMentor, gameMentorProps } = props;\n\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState<boolean>(false);\n    const [tooltipType, setTooltipType] = React.useState<TooltipType>(null);\n    const [tooltipData, setTooltipData] = React.useState<string[]>([\"\"]);\n    const [isTooltipRightSide, setIsTooltipRightSide] = React.useState<boolean>(true);\n    \n    const socket = React.useContext(SocketContext);\n\n    function handleSpecificAction(action: string) {\n        return () => handleAction(action);\n    }\n\n    function handleAction(action: string) {\n        if (!isMentor) {\n            socket?.emit('action', action);\n        }\n    }\n\n    function handleTravel(location: Locations.LocationId) {\n        return () => socket?.emit('travel', location);\n    }\n    \n    function triggerTooltip(type: TooltipType = null, data = [\"\"], isRightSide = true) {\n        return () => {\n            setIsTooltipVisible(type ? true : false);\n            if (type) {\n                setTooltipType(type);\n                setTooltipData(data);\n                setIsTooltipRightSide(isRightSide);\n            }\n        };\n    }\n    \n    const playerNotifs: Message[] = globalState.messages\n        .filter(message => message.visibility === \"all\" || message.visibility === teamId);\n    \n    const onActionPopupProps: OnActionPopupProps = {\n        action: playerState.stagedAction,\n        isMentor: isMentor,\n    };\n    \n    if (isMentor && gameMentorProps) {\n        onActionPopupProps.mentorProps = gameMentorProps.onActionPopupMentorProps;\n    }\n    \n    return (\n        <div className={`game ${isMentor ? \"smallTopGap\" : \"bigTopGap\"}`}>\n            <TopBar \n                inventory={playerState.inventory} \n                oxygenUntil={playerState.oxygenUntil} \n                crimsonUntil={new Date()}\n                triggerTooltip={triggerTooltip}\n            />\n            <LocationComponent \n                playerState={playerState} \n                handleAction={handleSpecificAction} \n                handleTravel={handleTravel}\n                triggerTooltip={triggerTooltip}\n                isMentor={isMentor}\n            />\n            <OnActionPopup \n                action={playerState.pausedOxygen ? \"pause\" : null} \n                isMentor={isMentor} />\n            <OnActionPopup {...onActionPopupProps} />\n            <Tooltip \n                isVisible={isTooltipVisible}\n                tooltipType={tooltipType}\n                data={tooltipData}\n                isRightSide={isTooltipRightSide}\n            />\n            <BottomBar\n                key={playerNotifs.length}\n                notifications={playerNotifs} \n                quests={playerState.quests} \n            />\n            <Journal />\n        </div>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport Login from '../components/Login';\nimport Game from '../components/Game';\nimport { GlobalState, PlayerState } from 'wlcommon';\nimport { SocketContext } from '../socket/socket';\n\nexport interface MainProps {\n    loggedIn: boolean;\n    updateLoggedIn: (x: boolean) => void;\n}\n\nconst Main = (props: MainProps): React.ReactElement => {\n    const { loggedIn, updateLoggedIn } = props;\n\n    const [playerState, setPlayerState] = React.useState<\n        PlayerState | undefined\n    >(undefined);\n    const [globalState, setGlobalState] = React.useState<\n        GlobalState | undefined\n    >(undefined);\n    const [teamId, setTeamId] = React.useState<\n        number | undefined\n    >(undefined);\n\n    const socket = React.useContext(SocketContext);\n\n    React.useEffect(() => {\n        console.log(socket);\n        socket?.on('player_update', (newGameState: PlayerState) => {\n            setPlayerState(newGameState);\n        });\n        socket?.on('global_update', (newGameState: GlobalState) => {\n            setGlobalState(newGameState);\n        });\n    }, [socket]);\n\n    if (playerState && globalState && teamId !== undefined) {\n        return (\n            <div>\n                <Game globalState={globalState} playerState={playerState} teamId={teamId}/>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Login\n                mode=\"player\"\n                updateLoggedIn={updateLoggedIn}\n                updateGlobalState={setGlobalState}\n                updatePlayerState={setPlayerState}\n                updateTeamId={setTeamId}\n            />\n        </div>\n    );\n};\n\nexport default Main;\n","import React from 'react';\nimport Game from './Game';\nimport { GameProps, GameMentorProps } from './Game';\nimport { OnActionPopupMentorProps } from './Popups/OnActionPopup';\nimport { SocketContext } from '../socket/socket';\n\nconst MentorGame = (props: GameProps): React.ReactElement => {\n    const { playerState } = props;\n    \n    const socket = React.useContext(SocketContext);\n    \n    function handleActionApprove() {\n        socket?.emit(\"action_ok\");\n    }\n    \n    function handleActionReject() {\n        socket?.emit(\"action_reject\");\n    }\n    \n    const onActionPopupMentorProps: OnActionPopupMentorProps = {\n        handleActionApprove: handleActionApprove,\n        handleActionReject: handleActionReject\n    }\n    \n    const gameMentorProps: GameMentorProps = {\n        onActionPopupMentorProps: onActionPopupMentorProps\n    }\n    \n    function onPause() {\n        //Implement actual pause functionality\n        if (playerState.pausedOxygen) {\n            socket?.emit(\"resume\");\n        } else {\n            socket?.emit(\"pause\");\n        }\n    }\n    \n    return (\n        <div>\n            <div style={{height: \"70px\"}}></div>\n            <p style={{border: \"2px solid green\"}}>Mentor Powers!</p>\n            <span><b>Pause</b> disables all player actions and pauses the oxygen timer. </span>\n            <span>{playerState.pausedOxygen ? \"Your team is currently paused. \" : \"\"}</span>\n            <span>&emsp;</span>\n            <button onClick={onPause}>{playerState.pausedOxygen ? \"Resume\" : \"Pause\"}</button>\n            <Game {...props} isMentor={true} gameMentorProps={gameMentorProps}/>\n        </div>\n    );\n}\n\nexport default MentorGame;","import React from 'react';\nimport Login from '../components/Login';\nimport MentorGame from '../components/MentorGame';\nimport { GlobalState, PlayerState } from 'wlcommon';\nimport { SocketContext } from '../socket/socket';\n\n\nexport interface MentorProps {\n    loggedIn: boolean;\n    updateLoggedIn: (x: boolean) => void;\n}\n\nconst Mentor = (props: MentorProps): React.ReactElement => {\n    const { loggedIn, updateLoggedIn } = props;\n\n    const [playerState, setPlayerState] = React.useState<\n        PlayerState | undefined\n    >(undefined);\n    const [globalState, setGlobalState] = React.useState<\n        GlobalState | undefined\n    >(undefined);\n    const [teamId, setTeamId] = React.useState<\n        number | undefined\n    >(undefined);\n\n    const socket = React.useContext(SocketContext);\n\n    React.useEffect(() => {\n        console.log(socket);\n        socket?.on('player_update', (newGameState: PlayerState) => {\n            setPlayerState(newGameState);\n        });\n        socket?.on('global_update', (newGameState: GlobalState) => {\n            setGlobalState(newGameState);\n        });\n    }, [socket]);\n\n    if (playerState && globalState && teamId) {\n        return (\n            <div>\n                <MentorGame globalState={globalState} playerState={playerState} teamId={teamId}/>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Login\n                mode=\"player\"\n                updateLoggedIn={updateLoggedIn}\n                updateGlobalState={setGlobalState}\n                updatePlayerState={setPlayerState}\n                updateTeamId={setTeamId}\n            />\n        </div>\n    );\n};\n\nexport default Mentor;\n","import React from 'react';\nimport Login from '../components/Login';\nimport { SocketContext } from '../socket/socket';\nimport './Admin.css';\n\nexport interface AdminProps {\n    loggedIn: boolean;\n    updateLoggedIn: (x: boolean) => void;\n}\n\ninterface OutputEntry {\n    time: Date;\n    type: string;\n    message: string;\n    input: string;\n}\n\ninterface ClearAction {\n    type: 'clear';\n}\n\ninterface NewEntryAction {\n    type: 'new_entry';\n    payload: OutputEntry;\n}\n\ntype AdminCommandAction = ClearAction | NewEntryAction;\n\nconst adminCommandReducer = (\n    state: OutputEntry[],\n    action: AdminCommandAction\n): OutputEntry[] => {\n    switch (action.type) {\n        case 'clear':\n            return [];\n        case 'new_entry':\n            return [...state, action.payload];\n    }\n};\n\nconst Admin = (props: AdminProps): React.ReactElement => {\n    const { loggedIn, updateLoggedIn } = props;\n    const [input, setInput] = React.useState('');\n    const [output, outputDispatch] = React.useReducer(adminCommandReducer, []);\n    const socket = React.useContext(SocketContext);\n\n    if (!loggedIn) {\n        return (\n            <div>\n                <Login updateLoggedIn={updateLoggedIn} mode=\"admin\" />\n            </div>\n        );\n    }\n\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (\n        event\n    ) => {\n        setInput(event.target.value);\n    };\n\n    const handleKeydown: React.KeyboardEventHandler<HTMLInputElement> = (\n        event\n    ) => {\n        if (event.key !== 'Enter') return;\n        if (input === 'clear') {\n            outputDispatch({ type: 'clear' });\n        } else {\n            socket?.emit(\n                'admin',\n                input.split(' '),\n                (event: string, payload: unknown) => {\n                    const message =\n                        typeof payload === 'string'\n                            ? payload\n                            : JSON.stringify(payload);\n                    outputDispatch({\n                        type: 'new_entry',\n                        payload: {\n                            time: new Date(),\n                            message,\n                            type: event,\n                            input,\n                        },\n                    });\n                }\n            );\n        }\n        setInput('');\n    };\n\n    return (\n        <div className=\"admin\">\n            <div className=\"output\">\n                {output.map((entry, i) => (\n                    <React.Fragment key={i}>\n                        <p className=\"input\">\n                            [{entry.time.toLocaleTimeString('en-UK')}]{' '}\n                            {entry.input}\n                        </p>\n                        <p className={entry.type}>{entry.message}</p>\n                    </React.Fragment>\n                ))}\n            </div>\n            <input\n                placeholder=\"Command\"\n                value={input}\n                onChange={handleChange}\n                onKeyDown={handleKeydown}\n            />\n        </div>\n    );\n};\n\nexport default Admin;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Main from './pages/Main';\nimport Mentor from './pages/Mentor';\nimport Admin from './pages/Admin';\nimport { socket, SocketContext } from './socket/socket';\n\nexport interface AppProps {\n    children?: React.ReactNode;\n}\n\nfunction App(): React.ReactElement {\n    const [loggedIn, setLoggedIn] = React.useState<boolean>(false);\n\n    const [chapter, setChapter] = React.useState<number | undefined>(undefined);\n    const [deadline, setDeadline] = React.useState<Date | null>(null);\n\n    React.useEffect(\n        () => () => {\n            socket.disconnect();\n            setLoggedIn(false);\n        },\n        []\n    );\n\n    return (\n        <Router>\n            <SocketContext.Provider value={socket}>\n                <div className=\"App\">\n                    <Header chapter={chapter} deadline={deadline} />\n                    <Switch>\n                        <Route path=\"/mentor\">\n                            <Mentor\n                                loggedIn={loggedIn}\n                                updateLoggedIn={setLoggedIn}\n                            />\n                        </Route>\n                        <Route path=\"/admin\">\n                            <Admin\n                                loggedIn={loggedIn}\n                                updateLoggedIn={setLoggedIn}\n                            />\n                        </Route>\n                        <Route path=\"/\">\n                            <Main\n                                loggedIn={loggedIn}\n                                updateLoggedIn={setLoggedIn}\n                            />\n                        </Route>\n                    </Switch>\n                </div>\n            </SocketContext.Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locationsMapping = exports.locationIds = void 0;\nclass LocationBuilder {\n    constructor(x, y) {\n        this.id = x;\n        this.name = y !== null && y !== void 0 ? y : x;\n        this._description = '';\n        this._hasOxygenStream = false;\n        this._hidden = false;\n        this._undersea = true;\n        this._needsMap = true;\n    }\n    description(x) {\n        this._description = x;\n        return this;\n    }\n    oxygenStream(x = true) {\n        this._hasOxygenStream = x;\n        return this;\n    }\n    hidden(x = true) {\n        this._hidden = x;\n        return this;\n    }\n    surface() {\n        this._undersea = false;\n        return this;\n    }\n    needsMap(need = true) {\n        this._needsMap = need;\n        return this;\n    }\n    make() {\n        return {\n            id: this.id,\n            name: this.name,\n            oxygenStream: this._hasOxygenStream,\n            description: this._description,\n            hidden: this._hidden,\n            undersea: this._undersea,\n            needsMap: this._needsMap,\n        };\n    }\n}\nexports.locationIds = {\n    SHORES: 'Shores',\n    SHALLOWS: 'Shallows',\n    CORALS: 'Corals',\n    STORE: 'Store',\n    ALCOVE: 'Alcove',\n    SHRINE: 'Shrine',\n    WOODS: 'Woods',\n    STATUE: 'Statue',\n    LIBRARY: 'Library',\n    KELP: 'Kelp',\n    BUBBLE: 'Bubble',\n    ANCHOVY: 'Anchovy',\n    BARNACLE: 'Barnacle',\n    CATFISH: 'Catfish',\n    SALMON: 'Salmon',\n    TUNA: 'Tuna',\n    UMBRAL: 'Umbral',\n};\nconst locations = [\n    new LocationBuilder(exports.locationIds.SHORES, 'Sleepy Shores')\n        .description('The closest point on land to the Undersea. You can return here by Resurfacing.')\n        .surface()\n        .needsMap(false)\n        .make(),\n    new LocationBuilder(exports.locationIds.SHALLOWS)\n        .description('The shallowest part of the Undersea, most will pass through the Shallows on their way to the Undersea.')\n        .needsMap(false)\n        .make(),\n    new LocationBuilder(exports.locationIds.CORALS, 'Memorial Corals')\n        .description('A location of historical importance. There are various exhibits about Undersea civilization in the reef.')\n        .needsMap(false)\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.STORE, 'General Store')\n        .description('A shop where everyone in the Undersea comes to get their supplies. Payment is made in Oxygen.')\n        .needsMap(false)\n        .make(),\n    new LocationBuilder(exports.locationIds.ALCOVE, 'Hidden Alcove')\n        .description('A mysterious chamber within the Statue of Triton.')\n        .hidden()\n        .make(),\n    new LocationBuilder(exports.locationIds.SHRINE, 'Shrine of the Innocent')\n        .description('A quiet shrine tucked away inside the Kelp Plains. Few know about its existence.')\n        .hidden()\n        .make(),\n    new LocationBuilder(exports.locationIds.WOODS, 'Whispering Woods')\n        .description('A quiet forest. Unicorns are said to live here.')\n        .surface()\n        .hidden()\n        .make(),\n    new LocationBuilder(exports.locationIds.STATUE, 'Statue of Triton')\n        .description('A monument to Triton, famed hero of the Undersea.')\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.LIBRARY, 'Marine Library')\n        .description(\"The Undersea's largest collection of books. If you have a Library Pass, you can read the books in the Restricted Section.\")\n        .make(),\n    new LocationBuilder(exports.locationIds.KELP, 'Kelp Plains')\n        .description('The plains is full of seaweed, and stretches for miles and miles.')\n        .make(),\n    new LocationBuilder(exports.locationIds.BUBBLE, 'Bubble Factory')\n        .description('One of the largest source of Oxygen in the Undersea. However, you will need a Bubble Pass to be able to get Oxygen here.')\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.ANCHOVY, 'Anchovy Avenue')\n        .description('A residential district. It is located close to the Marine Library and many of the staff live here.')\n        .make(),\n    new LocationBuilder(exports.locationIds.BARNACLE, 'Barnacle Residences')\n        .description('A residential district. Some of the more eccentric personalities in the Undersea live here.')\n        .make(),\n    new LocationBuilder(exports.locationIds.CATFISH, 'Catfish Crescent')\n        .description('A residential district. An Oxygen Stream is located here.')\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.SALMON, 'Salmon Street')\n        .description('A residential district. An Oxygen Stream is located here.')\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.TUNA, 'Tuna Turn')\n        .description('A residential district. An Oxygen Stream is located here.')\n        .oxygenStream()\n        .make(),\n    new LocationBuilder(exports.locationIds.UMBRAL, 'Umbral Ruins')\n        .description('A rundown area. There used to be a residential district here, until the local Oxygen Stream just vanished one day.')\n        .make(),\n];\nexports.locationsMapping = {};\nlocations.forEach((location) => (exports.locationsMapping[location.id] = location));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.itemsById = exports.itemDetails = void 0;\nexports.itemDetails = {\n    MAP: {\n        id: 'Map',\n        name: 'Map of the Undersea',\n        description: 'It shows you the way to most of the major locations in the Undersea.',\n    },\n    OXYGEN_GUIDE: {\n        id: 'OxygenGuide',\n        name: 'Guide to Oxygen Streams',\n        description: 'It describes most of the Oxygen Streams in the Undersea as well as how to get Oxygen from them.',\n    },\n    MERMAID_DOLL: {\n        id: 'MermaidDoll',\n        name: 'Mermaid Doll',\n        description: \"It's a doll of The Little Mermaid! How cute.\",\n    },\n    PUMP: {\n        id: 'Pump',\n        name: 'Oxygen Pump',\n        description: \"This pump allows you to store all your Oxygen before you resurface, so it doesn't go to waste.\",\n    },\n    BLACK_ROCK: {\n        id: 'BlackRock',\n        name: 'Mysterious Black Rock',\n        description: \"It's a strange looking black rock. There are odd markings on it. Nobody knows what its uses, or properties are...\",\n    },\n    BUBBLE: {\n        id: 'BubblePass',\n        name: 'Bubble Pass',\n        description: 'This golden pass lets you access the Bubble Factory. It has no expiry date and can be used multiple times.',\n    },\n    DISCOVERS: {\n        id: 'Discovers',\n        name: 'UnderseaDiscovers Ticket',\n        description: \"It's a tourist pass to the Statue of Triton! With this ticket, you get close-up access to more parts of the Statue.\",\n    },\n    STAFF: {\n        id: 'Staff',\n        name: 'Ancient Staff',\n        description: \"You suspect it may be the oldest thing you've ever seen... Yet, it is somehow still in very good condition.\",\n    },\n    BLINKSEED: {\n        id: 'Blinkseed',\n        name: 'Blinkseed Blades',\n        description: \"You harvested this from Kelp Plains. It looks like seaweed leaves, but Alyusi insists that it's blinkseed.\",\n    },\n    PYRITE_PAN: {\n        id: 'PyritePan',\n        name: 'Pyrite Pan',\n        description: \"It's a pan made of pyrite, a mineral also known as fool's gold.\",\n    },\n    LIBRARY_PASS: {\n        id: 'LibraryPass',\n        name: 'Library Pass',\n        description: \"It lets you read books from the Restricted Section of the Marine Library. The Chief Librarian has the authority to bestow it on individuals she deems worthy.\"\n    },\n    UNICORN_HAIR: {\n        id: 'UnicornHair',\n        name: \"Unicorn's Hair\",\n        description: 'The hair of a Unicorn. WARNING: Performing a dive with this in your inventory will put you in Challenge Mode. In Challenge Mode, any oxygen you gain from diving or Oxygen Streams will be halved.',\n    },\n    UNICORN_TEAR: {\n        id: 'UnicornTear',\n        name: \"Unicorn Tear\",\n        description: 'An incredibly valuable artefact. When mixed with the proper reagents, it can help cure any degree of exhaustion.',\n    },\n    PEARL: {\n        id: 'Pearl',\n        name: \"Pearl of Asclepius\",\n        description: 'An incredibly valuable artefact. Fashioned by the legendary healer Asclepius, a skilled healer can use this to heal someone of almost any kind of ailment.',\n    }\n};\nexports.itemsById = {};\nObject.values(exports.itemDetails).forEach((item) => {\n    exports.itemsById[item.id] = item;\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.quests = exports.questIds = void 0;\nexports.questIds = {\n    CHAPTER_1: 10,\n    CHAPTER_2: 20,\n    CHAPTER_3: 40,\n    FINCHES: 21,\n    FINCHES_2: 22,\n    LIBRARIAN_PASS: 23,\n    ARTEFACTS_1: 24,\n    ARTEFACTS_2: 25,\n    ARTEFACTS_3: 26,\n    ARGUMENT: 27,\n    ARTEFACTS_4: 28,\n    SHRINE_1: 29,\n    SHRINE_2: 30,\n    CLOAK_1: 50,\n    PYRITE: 51,\n    CLOAK_2: 52,\n    CLOAK_3: 53,\n};\nconst questList = [\n    {\n        id: exports.questIds.CHAPTER_1,\n        name: 'Chapter 1: The Seas',\n        description: 'The Queen has fallen deathly ill with a rarely-known disease. The King has therefore tasked several adventuring groups with retrieving two lost healing artefacts from the Undersea. As a newcomer to the Undersea, you will need to learn how to dive, survive in the Undersea and find your way around.',\n        unlocks: 20,\n        reward: ['20 minutes of Oxygen'],\n        stages: [\n            \"Perform the 'Dive' action at Sleepy Shores to enter the Shallows.\",\n            \"Perform the 'Get Oxygen' action at the Memorial Corals.\",\n            'Get a Map from the General Store.',\n        ],\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.CHAPTER_2,\n        name: 'Chapter 2: The Search',\n        when: 'You received this quest after completing Chapter 1: The Seas.',\n        description: 'Now that you are familiar with how to dive and survive in the Undersea, it is time for you to properly begin your journey. Explore around to find the two legendary artefacts.',\n        stages: [\n            \"Search for a Unicorn's Tear.\",\n            'Search for a Pearl of Asclepius.',\n        ],\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.CHAPTER_3,\n        name: 'Chapter 3: The Scent',\n        when: 'You received this quest suddenly.',\n        description: 'The waters around you start to turn a faint shade of red... It seems that something is awakening...',\n        stages: [\n            \"As a programme, ensure that the Crimson doesn't awaken until every team has completed Chapter 2.\",\n        ],\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.FINCHES,\n        name: 'The Finches Code',\n        when: \"You received this quest after performing the action 'Explore' the Memorial Corals.\",\n        description: 'The Memorial Corals houses many exhibits, detailing the history of the Undersea civilization. One such exhibit describes a language used by the Undersea a few centuries ago. You have a hunch that knowing this language could help you on your quest.',\n        stages: [\n            \"Perform the 'Learn Language' action to learn the language.\",\n            'Search for an engraving written in the ancient language.',\n            \"Perform the 'Decode Engraving' action.\",\n        ],\n        unlocks: exports.questIds.FINCHES_2,\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.FINCHES_2,\n        name: 'The Finches Code, Decoded',\n        when: 'You received this quest after completing The Finches Code.',\n        description: \"The engraving ominously talks about something called the 'Crimson', and how it is extremely sensitive to artefacts that symbolize healing. The engraving then describes an Undersea legend about Triton putting the 'Crimson' into a deep sleep ten thousand years ago. Perhaps you could learn more about this legend...\",\n        stages: [\n            'Get the Library Pass from the Chief Librarian',\n            \"Perform the 'Study Crimson Legend' action at the Marine Library\",\n        ],\n        reward: ['Knowledge on how to pacify the Crimson.'],\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.LIBRARIAN_PASS,\n        name: \"The Librarian's Pass\",\n        when: \"Your received this quest by performing the action 'Explore' at Anchovy Avenue.\",\n        description: 'The Chief Librarian lives in Anchovy Avenue, and is always looking to find bright young minds around the world. Impress her, and she will give you a Pass to read in the Restricted Section of the Library.',\n        stages: [\n            \"Perform the 'Inspire Chief Librarian' action at Anchovy Avenue.\",\n        ],\n        reward: ['Library Pass'],\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.ARTEFACTS_1,\n        name: 'Artefacts, Part 1',\n        when: \"You received this quest by performing the action 'Explore' at the Marine Library.\",\n        description: 'After checking with the librarians, you learn that the books describing the artefacts you look for are all located in the Restricted Section of the Library. Only the Chief Librarian can give you a pass to enter the Restricted Section. Unfortunately, she is on leave today...',\n        stages: [\n            'Get the Library Pass from the Chief Librarian.',\n            \"Perform the 'Study Artefact Legend' action at the Marine Library.\",\n        ],\n        unlocks: exports.questIds.ARTEFACTS_2,\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.ARTEFACTS_2,\n        name: 'Artefacts, Part 2',\n        when: 'You received this quest by completing Artefacts, Part 1.',\n        description: \"It seems that some of the books in the Restricted Section are written in some sort of ancient language. You will need to learn this language before you can understand the books. Unfortunately, it seems that this language isn't described anywhere in this library...\",\n        stages: [\n            'Learn the ancient language.',\n            \"Perfom the 'Decode' action to decode the books.\",\n        ],\n        unlocks: exports.questIds.ARTEFACTS_3,\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.ARTEFACTS_3,\n        name: 'Artefacts, Part 3',\n        when: 'You received this quest by completing Artefacts, Part 2.',\n        description: \"Finally, you have received a lead. Apparently, legends say that the Pearl of Asclepius was hidden underneath the Statue of Triton. You will need to gain access to the Statue of Triton, and then obtain an Ancient Staff to be able to wield the Pearl of Asclepius. You can get a tourist's pass to gain deeper access to the Statue of Triton, but you're not very sure of where to find the Staff...\",\n        stages: [\n            'Get a UnderseaDiscovers Ticket.',\n            'Search for an Ancient Staff.',\n        ],\n        unlocks: exports.questIds.ARTEFACTS_4,\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.ARGUMENT,\n        name: 'An Argument',\n        when: \"You received this quest by performing the action 'Explore' at Salmon Street.\",\n        description: 'You notice two children chasing each other with a long and pointy staff. How dangerous!',\n        stages: [\"Perform the 'Confront Children' action at Salmon Street.\"],\n        reward: ['Ancient Staff'],\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.ARTEFACTS_4,\n        name: 'Artefacts, Part 4',\n        when: 'You received this quest by completing Artefacts, Part 3.',\n        description: 'You have obtained the necessary items and you are now able to retrieve the Pearl of Asclepius. Good luck!',\n        stages: [\n            \"Perform the 'Explore' action at the Statue of Triton.\",\n        ],\n        reward: ['Access to the Hidden Alcove'],\n        stageOrder: 'inOrder',\n    },\n    {\n        id: exports.questIds.SHRINE_1,\n        name: 'Shrine of the Innocent, Part 1',\n        when: \"You received this quest by performing the action 'Explore' at Kelp Plains.\",\n        description: 'Wandering around Kelp Plains, you discover a small shrine tucked in a valley. The journey to the shrine looks rather arduous.',\n        stages: [\n            \"Perform the 'Climb down valley' action to get to the Shrine of the Innocent.\",\n        ],\n        stageOrder: 'anyOrder',\n        unlocks: exports.questIds.SHRINE_2,\n    },\n    {\n        id: exports.questIds.SHRINE_2,\n        name: 'Shrine of the Innocent, Part 2',\n        when: 'You received this quest by completing Shrine of the Innocent, Part 1',\n        description: [\n            'The shrinekeeper seems surprised at your arrival. He says that it is very rare for the shrine to have visitors.',\n            \"After you tell him about the purpose of your journey, the shrinekeeper tells you that you can perform a ritual to receive a Unicorn Tear.\",\n            \"First, you will have to return to the surface to obtain a Unicorn's Hair. After getting the Unicorn's Hair, you will enter Challenge Mode. You must then return to the undersea, give the Unicorn's Hair to the Shrine, and then survive for 30 minutes in Challenge Mode.\",\n            'When in Challenge Mode, you will only get 1/5 of the normal amount of Oxygen from diving and Oxygen Streams. Oxygen Pumps will also not work in Challenge Mode.'\n        ].join('\\n\\n'),\n        stages: [\n            \"Perform the 'Resurface' action at the Shallows to travel to Sleepy Shores. WARNING: You will lose all your Oxygen when you do this action.\",\n            \"Get a Unicorn's Hair at the Whispering Woods.\",\n            \"Return to the Undersea. WARNING: Diving with a Unicorn's Hair in your inventory will put you in Challenge Mode.\",\n            \"Perform the 'Give Unicorn's Hair' action at the Shrine of the Innocent.\",\n            'Survive for 30 minutes in Challenge Mode without resurfacing.',\n            \"Perform the 'Collect Unicorn Tear' action at the Shrine of the Innocent.\",\n        ],\n        stageOrder: 'inOrder',\n        reward: ['Unicorn Tear'],\n    },\n    {\n        id: exports.questIds.CLOAK_1,\n        name: 'The Man in the Cloak, Part 1',\n        when: \"You received this quest by performing the action 'Explore' at the Umbral Ruins.\",\n        description: [\n            '‘Greetings. My name is Alyusi Islassis. Is it your first time here in the Undersea?’',\n            '‘I am a dealer in exotic goods. I heard you are looking for a Pearl of Asclepius, yes? I do have one, but if you want me to let go of it, it had better be worth my while...’',\n            '‘What do I want? Well, I am interested in procuring thousand year old blinkseed sap. I will also need a container for the sap. A good one would be a pan made of pyrite. An old lady who lives at Barnacle Residences has one.’',\n        ].join('\\n\\n'),\n        stages: [\n            'Get a Pyrite Pan at Barnacle Residences.',\n            \"Perform the 'Show Pyrite Pan' action at the Umbral Ruins.\",\n        ],\n        stageOrder: 'inOrder',\n        unlocks: exports.questIds.CLOAK_2,\n    },\n    {\n        id: exports.questIds.PYRITE,\n        name: 'Pyrite Lady',\n        when: \"You received this quest by performing the action 'Explore' at the Barnacle Residences.\",\n        description: [\n            '‘Oh hello there, dearie. Talk to an old lady, would you?’',\n            '‘They call me the Pyrite Lady. Why’s that? Well, all my potionware are made of pyrite. The ignorant call pyrite ‘fool’s gold’, but it has vary special magical properties, which I need for the potions I make.’',\n            '‘I am getting old, and I accidentally mixed some of my potion ingredients together. Help an old lady, and you will get one of her extra pans.’',\n        ].join('\\n\\n'),\n        stages: [\n            \"Perform the 'Help Pyrite Lady' action at Barnacle Residences.\",\n        ],\n        stageOrder: 'anyOrder',\n    },\n    {\n        id: exports.questIds.CLOAK_2,\n        name: 'The Man in the Cloak, Part 2',\n        when: 'You received this quest by completing The Man in the Cloak, Part 1.',\n        description: [\n            '‘Ah, very good, the pyrite pan is exactly what you need.’',\n            '‘Now, I will need your assistance with one more thing. The bark of a blinkseed is very thick, and you will need a knife fashioned with a rare kind of mineral, chmyrrkyth. It looks like a black rock, but it has special properties that would allow you to cut the blinkseed bark. You can buy it at the General Store.’',\n            '‘Reimbursement? Get me the chmyrrkyth first, then we’ll talk.’',\n        ].join('\\n\\n'),\n        stages: [\n            'Find something that fits the description of the Chmyrrkyth.',\n            \"Perform the 'Give Chmyrrkyth' action at the Umbral Ruins\",\n        ],\n        stageOrder: 'inOrder',\n        unlocks: exports.questIds.CLOAK_3,\n    },\n    {\n        id: exports.questIds.CLOAK_3,\n        name: 'The Man in the Cloak, Part 3',\n        when: 'You received this quest by completing The Man in the Cloak, Part 2.',\n        description: [\n            '‘Very good. Now, while I make the knife, you can go harvest some blinkseed.’',\n            '‘Where to find blinkseed? It grows on Kelp Plains. The seaweed? Yes, I suppose you landdwellers might think that it looks like seaweed. Don’t be fooled. While it may look exactly like seaweed, it isn’t. Give me a few blades of blinkseed.’',\n            '‘Money for the chmyrrkyth? My dear, once I have the blinkseed sap, I will give it to you with the pearl.’',\n        ].join('\\n\\n'),\n        stages: [\n            \"Perform the 'Harvest' action at Kelp Plains.\",\n            'Get 3 x Blinkseed.',\n            'Travel back to the Umbral Plains.',\n        ],\n        stageOrder: 'inOrder',\n    },\n];\nexports.quests = {};\nquestList.forEach((quest) => {\n    exports.quests[quest.id] = quest;\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.actionsByLocation = exports.specificActions = exports.ALL_OXYGEN = exports.ALL_UNDERWATER = void 0;\nconst locations_1 = require(\"./locations\");\nexports.ALL_UNDERWATER = {\n    STORE_OXYGEN: 'store_oxygen',\n    WITHDRAW_OXYGEN: 'withdraw_oxygen',\n    RESURFACE: 'resurface',\n};\nexports.ALL_OXYGEN = {\n    GET_OXYGEN: 'get_oxygen',\n};\nexports.specificActions = {\n    SHORES: {\n        DIVE: 'dive',\n    },\n    SHALLOWS: {},\n    CORALS: {\n        EXPLORE: 'explore',\n        LEARN_LANG: 'learn_lang',\n    },\n    STORE: {\n        BUY_MAP: 'buy_map',\n        BUY_GUIDE: 'buy_guide',\n        BUY_DOLL: 'buy_doll',\n        BUY_DISCOVERS: 'buy_discovers',\n        BUY_PUMP: 'buy_pump',\n        BUY_BLACK_ROCK: 'buy_black_rock',\n        BUY_BUBBLE_PASS: 'buy_bubble_pass',\n    },\n    STATUE: {\n        EXPLORE: 'explore',\n        DECODE_ENGRAVING: 'decode_engraving',\n        CAST_COOLING_AURA: 'cast_cooling_aura',\n        STRENGTHEN_BEFUDDLEMENT: 'strengthen_befuddlement',\n        POWER_CONTAINMENT: 'power_containment',\n        PURIFY_CORRUPTION: 'purify_corruption',\n    },\n    LIBRARY: {\n        EXPLORE: 'explore',\n        STUDY_CRIMSON: 'study_crimson',\n        STUDY_ARTEFACT: 'study_artefact',\n        DECODE_ARTEFACT: 'decode_artefact',\n    },\n    ANCHOVY: {\n        EXPLORE: 'explore',\n        INSPIRE: 'inspire',\n    },\n    BARNACLE: {\n        EXPLORE: 'explore',\n        HELP: 'help',\n    },\n    SALMON: {\n        EXPLORE: 'explore',\n        CONFRONT: 'confront',\n    },\n    TUNA: {},\n    CATFISH: {},\n    BUBBLE: {},\n    KELP: {\n        EXPLORE: 'explore',\n        CLIMB_DOWN: 'climb_down',\n        HARVEST: 'harvest',\n    },\n    SHRINE: {\n        GIVE_HAIR: 'give_hair',\n        COLLECT_HAIR: 'collect_hair',\n    },\n    UMBRAL: {\n        EXPLORE: 'explore',\n        GIVE_PAN: 'give_pan',\n        GIVE_ROCK: 'give_rock',\n    },\n    WOODS: {\n        GET_HAIR: 'get_hair',\n    },\n    ALCOVE: {\n        RETRIEVE_PEARL: 'retrieve_pearl',\n    },\n};\nconst allOxygenActions = Object.values(exports.ALL_OXYGEN);\nconst allUnderseaActions = Object.values(exports.ALL_UNDERWATER);\nexports.actionsByLocation = {};\nObject.entries(exports.specificActions).forEach(([k, v]) => {\n    const locationId = locations_1.locationIds[k];\n    exports.actionsByLocation[locationId] = Object.values(v);\n    if (locations_1.locationsMapping[locationId].undersea)\n        exports.actionsByLocation[locationId].push(...allUnderseaActions);\n    if (locations_1.locationsMapping[locationId].oxygenStream)\n        exports.actionsByLocation[locationId].push(...allOxygenActions);\n});\n"],"sourceRoot":""}